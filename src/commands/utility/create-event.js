const {SlashCommandBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, EmbedBuilder} = require('discord.js');
const {EventList} = require("../../dbModels.js");

module.exports = {
    data: new SlashCommandBuilder()
        .setName('create-event')
        .setDescription('Provides information about the user.')
        .addStringOption(option =>
            option.setName('title')
                .setDescription('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –∏–≤–µ–Ω—Ç–∞')
                .setRequired(true)
                .setMaxLength(255))
        .addStringOption(option =>
            option.setName('description')
                .setDescription('–û–ø–∏—Å–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞')
                .setRequired(true))
        .addStringOption(option =>
            option.setName('banner')
                .setDescription('—Å—Å—ã–ª–∫–∞ –Ω–∞ –≥–∏—Ñ–∫—É –∏–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∏–≤–µ–Ω—Ç–µ')
                .setRequired(true)
                .setMaxLength(255)),

    async execute(interaction) {

        const options = interaction.options?._hoistedOptions;

        const acceptCreateEvent = new ButtonBuilder()
            .setCustomId('accept_create_event')
            .setLabel('‚úÖ')
            .setStyle(ButtonStyle.Success);

        const cancelCreateEvent = new ButtonBuilder()
            .setCustomId('cancel_create_event')
            .setLabel('‚õî')
            .setStyle(ButtonStyle.Danger);

        const announceEventActionRow = new ActionRowBuilder()
            .addComponents(acceptCreateEvent, cancelCreateEvent);

        if(!options){
            await interaction.reply({content: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≤–µ–Ω—Ç–∞", ephemeral: true});
            return
        }
        try{
            const transformedOptions = options?.reduce((acc, option) => ({...acc,[option.name]: option.value }), {})
            const embed = new EmbedBuilder()
                .setTitle(`üîî  –ò–≤–µ–Ω—Ç ‚Äî ${transformedOptions?.title}`)
                .setDescription('```' + transformedOptions?.description + '```')
                .setFields({name: "–ò–≥—Ä–æ–∫–æ–≤", value: "0", inline: true}, {
                    name: "–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ —É—á–∞—Å—Ç–∏–µ",
                    value: "75 ü™ô",
                    inline: true
                })
                .setImage(transformedOptions.banner);

            const message = await interaction.reply({content: "–ü—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–ª—è–µ–º–æ–≥–æ –∏–≤–µ–Ω—Ç–∞",embeds: [embed], components: [announceEventActionRow], ephemeral: true});
            const filter = i => i.user.id === interaction.user.id;
            try {
                const confirmation = await message.awaitMessageComponent({filter, time: 60000})
                if(confirmation.customId === 'accept_create_event'){
                    await EventList.create(transformedOptions);
                    await confirmation.update({content: "–ò–≤–µ–Ω—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω",embeds: [],components: [], ephemeral: true})
                }
                else if(confirmation.customId === 'cancel_create_event'){
                    await confirmation.update({content: "–°–æ–∑–¥–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–æ –æ—Ç–º–µ–Ω–µ–Ω–æ",embeds: [],components: [], ephemeral: true})
                }
            }catch (e) {
                if(e?.name === "SequelizeUniqueConstraintError"){
                    await interaction.followUp({ content:`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n\n –û—à–∏–±–∫–∞: ${e?.parent?.detail}`, ephemeral: true });
                    return
                }
                await interaction.followUp({ content:`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`, ephemeral: true });
            }
        }catch (e) {
            console.log(e)
            await interaction.followUp({ content: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–≤–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral: true });
        }

    },
};